dependencies {


    // To enable darkmode in webview
    implementation "androidx.webkit:webkit:$WEB_KIT_VERSION"

    kapt "com.google.dagger:dagger-android-processor:$DAGGER_ANDROID_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_ANDROID_VERSION"
    api fileTree(include: ['*.jar'], dir: 'lib')
    implementation "androidx.legacy:legacy-support-v4:$LEGACY_SUPPORT_VERSION"
    implementation "androidx.appcompat:appcompat:$APP_COMPAT_VERSION"
    androidTestImplementation("androidx.test.espresso:espresso-core:$ESPRESSO_CORE_VERSION", {

        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "androidx.annotation:annotation:$ANDROIDX_ANNOTATION"
    /*SUPPORT LIBRARIES*/

    //noinspection GradleCompatible
    api "com.google.android.material:material:$MATERIAL_VERSION"
    api "androidx.cardview:cardview:$CARDVIEW_VERSION"
    api "androidx.viewpager:viewpager:$VIEWPAGER_VERSION"

    /*GLIDE IMAGE LOADING LIB*/
    api "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    /*CIRCLE IMAGE VIEW LIB*/
    api "de.hdodenhof:circleimageview:$CIRCLE_IMAGEVIEW_VERSION"
    /*JSOUP DEPENDENCY*/
    implementation "org.jsoup:jsoup:$JSOUP_VERSION"
    /*Firebase*/
    api "com.google.firebase:firebase-crash:$FIREBASE_CRASH_VERSION"
    api "com.google.firebase:firebase-messaging:$FIREBASE_MESSAGING_VERSION"
    /*GOOGLE LOCATION SERVICE*/

    //noinspection GradleDependency
    implementation "com.google.android.gms:play-services-location:$PLAY_SERVICES_LOCATION_VERSION"

    api "com.google.android.gms:play-services-maps:$PLAY_SERVICES_MAPS_VERSION"
    /*google social login auth service*/

    //noinspection GradleDependency
    api "com.google.android.gms:play-services-auth:$PLAY_SERVICES_AUTH_VERSION"
    api "com.google.firebase:firebase-auth:$FIREBASE_AUTH_VERSION"
    api "com.google.firebase:firebase-database:$FIREBASE_DATABASE_VERSION"
    api "com.google.firebase:firebase-core:$FIREBASE_CORE_VERSION"

    // Firebase MLKit service
    api "com.google.firebase:firebase-ml-vision:$FIREBASE_ML_VISION_VERSION"
    api "com.google.firebase:firebase-ml-vision-image-label-model:$FIREBASE_ML_VISION_IMAGE_LABEL_VERSION"
    api "com.google.firebase:firebase-ml-model-interpreter:$FIREBASE_ML_MODEL_INTERPRETER_VERSION"


    // glide dependencies
    implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    kapt "com.github.bumptech.glide:compiler:$GLIDE_VERSION"

    /*Facebook social login */
    //implementation "com.facebook.android:facebook-android-sdk:$facebook_sdk_version"
    implementation "com.facebook.android:facebook-android-sdk:$FACEBOOK_SDK_VERISON_"
    // retrofit, gson
    api "com.google.code.gson:gson:$GSON_VERSION"
    api "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    api "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    api "com.squareup.okhttp3:logging-interceptor:$OKHTTP3_VERSION"
    api "com.squareup.okhttp3:okhttp-urlconnection:$OKHTTP3_VERSION"
    // Reative X android
    api "io.reactivex.rxjava2:rxandroid:$RXANDROID_VERSION"
    //    Because RxAndroid releases are few and far between, it is recommended you also

    //    explicitly depend on RxJava 's latest version for bug fixes and new features.
    api "io.reactivex.rxjava2:rxjava:$RXJAVA2_VERSION"
    api "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    api "com.squareup.retrofit2:converter-scalars:$RETROFIT_VERSION"
    api "com.jakewharton.rxbinding2:rxbinding:$RX_BINDING"
    /*BOTTOM BAR ANDROID VIEW DEPENDENCY*/
    api "com.roughike:bottom-bar:$BOTTOMBAR_VERSION"
    /*EXPANDABLE RECYCLER VIEW.*/
    api "com.bignerdranch.android:expandablerecyclerview:$EXPANDABLE_RECYCLERVIEW_VERSION"
    api "com.muddzdev:styleabletoast:$STYLEABLE_TOAST_VERSION"
    implementation "com.google.android:flexbox:$FLEXBOX_VERSION"
    /*Stripe payment */
//    api "com.stripe:stripe-android:$stripe_version"
    implementation "com.facebook.stetho:stetho:$STETHO_VERSION"
    implementation "com.facebook.stetho:stetho-okhttp3:$STETHO_VERSION"
    //    compile 'com.twitter.sdk.android:twitter:3.0.0'
    api "com.twitter.sdk.android:twitter-core:$TWITTER_SDK_VERSION"
    api "androidx.multidex:multidex:$MULTIDEX_VERSION_2"
    api "com.airbnb.android:lottie:$LOTTIE_VERSION"
    api "com.theartofdev.edmodo:android-image-cropper:$IMAGE_CROPPER"
//    api 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    // Add the Firebase Crashlytics SDK.
    api "com.google.firebase:firebase-crashlytics:$FIREBASE_CRASHLYTICS_VERSION"

    // Recommended: Add the Google Analytics SDK.
    api "com.google.firebase:firebase-analytics:$FIREBASE_ANALYTICS_VERSION"
    /*ANNOTATIONS USED IN THE PROJECT*/
    api "androidx.constraintlayout:constraintlayout:$CONSTRAINT_LAYOUT_VERSION"
    androidTestImplementation "tools.fastlane:screengrab:$SCREEN_GRAB_VERSION"
    api(project(':SweetAlertDialog'))

    androidTestImplementation "androidx.test.espresso:espresso-contrib:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation "androidx.core:core-ktx:$CORE_KTX_VERSION"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    api "androidx.lifecycle:lifecycle-extensions:$LIFECYCLE_EXTENSION_VERSION"

    implementation "com.mixpanel.android:mixpanel-android:$MIX_PANEL_VERSION"

}
