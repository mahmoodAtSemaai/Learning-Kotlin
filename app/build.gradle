apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'

apply from: rootProject.file('library-common-module.gradle')

repositories {
    maven { url Url.maven }
    mavenCentral()
}


android {
    defaultPublishConfig BuildTypes.release

    signingConfigs {
        release {
            storeFile file("keystore/key-testing.jks")
            storePassword "semaai_testing"
            keyAlias "semaai_testing"
            keyPassword "semaai_testing"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    flavorDimensions Flavours.environment, Flavours.appType
    productFlavors {
        marketPlace {
            dimension Flavours.appType
        }
        odooBuilder {
            dimension Flavours.appType
        }
        envTesting {
            dimension Flavours.environment
            buildConfigField("String", "BASE_URL", "\"${project.TESTING_BASE_URL}\"")
            buildConfigField("String", "BASIC_AUTH_KEY", "\"${project.TESTING_BASIC_AUTH_KEY}\"")
            buildConfigField("String", "MIXPANEL_TOKEN", "\"${project.MIXPANEL_TESTING}\"")
        }
        envStaging {
            dimension Flavours.environment
            buildConfigField("String", "BASE_URL", "\"${project.STAGING_BASE_URL}\"")
            buildConfigField("String", "BASIC_AUTH_KEY", "\"${project.STAGING_BASIC_AUTH_KEY}\"")
            buildConfigField("String", "MIXPANEL_TOKEN", "\"${project.MIX_PANEL_STAGING}\"")
        }
        envProduction {
            dimension Flavours.environment
            buildConfigField("String", "BASE_URL", "\"${project.PRODUCTION_BASE_URL}\"")
            buildConfigField("String", "BASIC_AUTH_KEY", "\"${project.PRODUCTION_BASIC_AUTH_KEY}\"")
            buildConfigField("String", "MIXPANEL_TOKEN", "\"${project.MIXPANEL_PRODUCTION}\"")
        }
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        minSdkVersion DepVersions.minSdkVersion
        targetSdkVersion DepVersions.targetSdkVersion
        testInstrumentationRunner Dependencies.testInstrumentationRunner
        renderscriptTargetApi DepVersions.renderScriptTargetApi
        renderscriptSupportModeEnabled true
        multiDexEnabled true


        buildConfigField("int", "MIN_PASSWORD_LENGTH", "1")

        buildConfigField("int", "DEFAULT_BACK_PRESSED_TIME_TO_CLOSE", "2000")
        buildConfigField("int", "DEFAULT_REDIRECTION_TIME_ON_SPLASH", "2000")
        buildConfigField("int", "DEFAULT_NO_OF_SEARCH_PRODUCTS", "5")
        buildConfigField("int", "DEFAULT_MAX_QTY", "7")

        buildConfigField("int", "DEFAULT_DAYS_UNTIL_PROMPT", "3")
        buildConfigField("int", "DEFAULT_LAUNCHES_UNTIL_PROMPT", "10")
        buildConfigField("String", "DEFAULT_NAME_CUSTOMER_PROFILE_IMAGE_WITH_EXTENTION", '"profile.jpg"')
        buildConfigField("int", "DEFAULT_DELAY_LAST_CLICK", "1000")
        buildConfigField("String", "DEFAULT_STRIPE_CURRENCY", '"eur"')
        buildConfigField("int", "DEFAULT_ITEM_PER_PAGE", "25")
        buildConfigField("long", "REMOTE_CONFIG_MIN_FETCH_INTERVAL_SECONDS", "60")
        buildConfigField("String", "CURRENT_APP_VERSION", "\"${Version.name}\"")

        buildConfigField("String", "APP_PLAYSTORE_URL", "\"${project.APP_PLAYSTORE_URL}\"")
        buildConfigField("Boolean", "isMarketplace", "true")

    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation(
            Dependencies.webkit,
            Dependencies.legacySupport,
            Dependencies.appCompat,
            Dependencies.jsoup,
            Dependencies.playServicesLocation,
            Dependencies.glide,
            Dependencies.facebookSDK,
            Dependencies.flexbox,
            Dependencies.stetho,
            Dependencies.stethoOkHttp,
            Dependencies.coreKTX,
            Dependencies.remoteConfig,
            Dependencies.remoteConfigKTX,
            Dependencies.greenRobot
    )

    androidTestImplementation(
            Dependencies.androidXAnnotation,
            Dependencies.screenGrab
    )

    api(
            fileTree(include: ['*.jar'], dir: 'lib'),
            Dependencies.material,
            Dependencies.cardview,
            Dependencies.viewpager,
            Dependencies.glide,
            Dependencies.circleImageView,
            Dependencies.firebaseCrash,
            Dependencies.firebaseMessaging,
            Dependencies.firebaseAuth,
            Dependencies.playServicesMaps,
            Dependencies.playServicesAuth,
            Dependencies.firebaseDatabase,
            Dependencies.firebaseCore,
            Dependencies.firebaseMLVision,
            Dependencies.firebaseMLVisionImageLabel,
            Dependencies.firebaseMLModelInterpreter,
            Dependencies.gson,
            Dependencies.retrofit,
            Dependencies.retrofitConverter,
            Dependencies.okHTTPInterceptor,
            Dependencies.okHTTPURLConnection,
            Dependencies.rxAndroid,
            Dependencies.rxJava,
            Dependencies.retrofitRxJava,
            Dependencies.retrofitConverterScalar,
            Dependencies.bottombar,
            Dependencies.rxBinding,
            Dependencies.expandableRecyclerView,
            Dependencies.stylableToast,
            Dependencies.twitterCore,
            Dependencies.multidex2,
            Dependencies.lottie,
            Dependencies.imageCropper,
            Dependencies.constraintLayout,
            Dependencies.firebaseCrashlytics,
            Dependencies.firebaseAnalytics,
            Dependencies.kotlinStdlib,
            Dependencies.lifecycleExtension,
            Dependencies.mixPanel,
            Dependencies.hilt,
            Dependencies.coroutinesCore,
            Dependencies.coroutinesAndroid,
            project(Modules.sweetAlertDialog)
    )

    kapt(
            Dependencies.daggerAndroidProcessor,
            Dependencies.daggerCompiler,
            Dependencies.glideCompiler,
            Dependencies.hiltCompiler
    )
    androidTestImplementation(Dependencies.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestImplementation(Dependencies.espressoContrib, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    })

}
